basePath: /
definitions:
  models.Song:
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления онлайн-библиотекой песен.
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Получение списка песен с фильтрацией и пагинацией
      parameters:
      - description: Группа
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: title
        type: string
      - description: Лимит
        in: query
        name: limit
        type: integer
      - description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Получить список песен
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавление новой песни
      parameters:
      - description: Песня
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Добавить новую песню
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление песни
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Удалить песню
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Обновление данных песни
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Песня
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Обновить данные песни
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Получение текста песни с пагинацией по куплетам
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Страница
        in: query
        name: page
        type: integer
      - description: Размер страницы
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Получить текст песни
      tags:
      - songs
schemes:
- http
swagger: "2.0"
